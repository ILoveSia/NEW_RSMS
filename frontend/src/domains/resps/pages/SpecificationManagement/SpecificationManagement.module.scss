@import '@/styles/variables';
@import '@/styles/mixins';

.container {
  padding: $spacing-lg;
  max-width: 1600px;
  margin: 0 auto;
  min-height: 100vh;
  background: $color-background-default;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: $spacing-lg;
  padding-bottom: $spacing-md;
  border-bottom: 1px solid $color-border-light;
}

.titleSection {
  .title {
    font-size: 2rem;
    font-weight: 600;
    color: $color-text-primary;
    margin: 0 0 $spacing-xs 0;
  }

  .subtitle {
    font-size: 1rem;
    color: $color-text-secondary;
    margin: 0;
  }
}

.createButton {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  padding: $spacing-sm $spacing-md;
  background: $color-primary;
  color: white;
  border: none;
  border-radius: $border-radius-md;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: darken($color-primary, 8%);
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

.filterSection {
  display: flex;
  gap: $spacing-md;
  margin-bottom: $spacing-lg;
  flex-wrap: wrap;

  @include responsive-breakpoint($breakpoint-tablet) {
    flex-direction: column;
  }
}

.searchBox {
  position: relative;
  flex: 1;
  min-width: 300px;

  .searchIcon {
    position: absolute;
    left: $spacing-sm;
    top: 50%;
    transform: translateY(-50%);
    color: $color-text-secondary;
  }

  .searchInput {
    width: 100%;
    padding: $spacing-sm $spacing-sm $spacing-sm 40px;
    border: 1px solid $color-border-light;
    border-radius: $border-radius-md;
    font-size: 0.9rem;
    background: white;
    transition: border-color 0.2s ease;

    &:focus {
      outline: none;
      border-color: $color-primary;
      box-shadow: 0 0 0 3px rgba($color-primary, 0.1);
    }

    &::placeholder {
      color: $color-text-secondary;
    }
  }
}

.filter {
  padding: $spacing-sm $spacing-md;
  border: 1px solid $color-border-light;
  border-radius: $border-radius-md;
  background: white;
  color: $color-text-primary;
  font-size: 0.9rem;
  cursor: pointer;
  min-width: 140px;

  &:focus {
    outline: none;
    border-color: $color-primary;
  }
}

.statsSection {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: $spacing-md;
  margin-bottom: $spacing-lg;

  @include responsive-breakpoint($breakpoint-mobile) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.statCard {
  background: white;
  padding: $spacing-md;
  border-radius: $border-radius-lg;
  border: 1px solid $color-border-light;
  text-align: center;
  transition: all 0.2s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .statValue {
    font-size: 2rem;
    font-weight: 700;
    color: $color-primary;
    margin-bottom: $spacing-xs;
  }

  .statLabel {
    font-size: 0.9rem;
    color: $color-text-secondary;
    font-weight: 500;
  }
}

.tableSection {
  background: white;
  border-radius: $border-radius-lg;
  border: 1px solid $color-border-light;
  overflow: hidden;
}

.tableHeader {
  padding: $spacing-md $spacing-lg;
  background: $color-background-paper;
  border-bottom: 1px solid $color-border-light;
  font-weight: 600;
  color: $color-text-primary;
}

.tableContainer {
  overflow-x: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
  min-width: 1400px;

  th {
    background: $color-background-paper;
    padding: $spacing-sm $spacing-md;
    text-align: left;
    font-weight: 600;
    color: $color-text-primary;
    border-bottom: 2px solid $color-border-light;
    font-size: 0.9rem;
    white-space: nowrap;
  }

  td {
    padding: $spacing-sm $spacing-md;
    border-bottom: 1px solid $color-border-light;
    font-size: 0.9rem;
    vertical-align: top;
  }
}

.tableRow {
  transition: background-color 0.2s ease;

  &:hover {
    background: rgba($color-primary, 0.02);
  }
}

.specId {
  font-weight: 600;
  color: $color-primary;
  font-family: 'JetBrains Mono', monospace;
  font-size: 0.85rem;
}

.titleCell {
  min-width: 350px;

  .specTitle {
    font-weight: 600;
    color: $color-text-primary;
    margin-bottom: 2px;
    line-height: 1.3;
  }

  .specDescription {
    font-size: 0.8rem;
    color: $color-text-secondary;
    line-height: 1.3;
    margin-bottom: $spacing-xs;
  }
}

.tagContainer {
  display: flex;
  gap: $spacing-xs;
  flex-wrap: wrap;
  margin-top: $spacing-xs;
}

.tag {
  display: inline-block;
  padding: 2px 6px;
  background: rgba($color-primary, 0.1);
  color: $color-primary;
  border-radius: $border-radius-sm;
  font-size: 0.7rem;
  font-weight: 500;
  white-space: nowrap;
}

.tagMore {
  display: inline-block;
  padding: 2px 6px;
  background: rgba($color-text-secondary, 0.1);
  color: $color-text-secondary;
  border-radius: $border-radius-sm;
  font-size: 0.7rem;
  font-weight: 500;
}

.version {
  font-family: 'JetBrains Mono', monospace;
  font-weight: 600;
  color: $color-secondary;
  font-size: 0.85rem;
}

.statusCell {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  min-width: 100px;

  .statusLabel {
    font-weight: 500;
    font-size: 0.85rem;
  }
}

.category {
  font-size: 0.85rem;
  color: $color-text-primary;
  font-weight: 500;
}

.author, .reviewer, .approver {
  font-size: 0.85rem;
  color: $color-text-primary;
}

.countCell {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  
  span {
    font-size: 0.85rem;
    color: $color-text-primary;
    font-weight: 500;
  }
}

.downloadCount {
  .countCell {
    color: $color-secondary;
  }
}

.viewCount {
  .countCell {
    color: $color-primary;
  }
}

.updatedAt {
  font-size: 0.85rem;
  color: $color-text-secondary;
  white-space: nowrap;
}

.actionButtonGroup {
  display: flex;
  gap: $spacing-xs;
}

.actionButton {
  padding: $spacing-xs;
  background: transparent;
  border: 1px solid $color-border-light;
  border-radius: $border-radius-sm;
  color: $color-text-secondary;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: $color-primary;
    color: white;
    border-color: $color-primary;
  }
}

// 모달 스타일
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: $spacing-md;
}

.modal {
  background: white;
  border-radius: $border-radius-lg;
  max-width: 800px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: $spacing-lg;
  border-bottom: 1px solid $color-border-light;

  h2 {
    margin: 0;
    font-size: 1.5rem;
    color: $color-text-primary;
  }

  .closeButton {
    background: none;
    border: none;
    color: $color-text-secondary;
    cursor: pointer;
    padding: $spacing-xs;
    border-radius: $border-radius-sm;
    transition: background-color 0.2s ease;

    &:hover {
      background: $color-background-paper;
      color: $color-text-primary;
    }
  }
}

.modalContent {
  padding: $spacing-lg;
}

.detailGrid {
  display: grid;
  gap: $spacing-md;
  margin-bottom: $spacing-lg;
}

.detailItem {
  display: grid;
  grid-template-columns: 150px 1fr;
  gap: $spacing-sm;
  align-items: start;

  label {
    font-weight: 600;
    color: $color-text-secondary;
    font-size: 0.9rem;
  }

  span {
    color: $color-text-primary;
    word-break: break-word;
  }
}

.modalActions {
  display: flex;
  gap: $spacing-sm;
  justify-content: flex-end;
  border-top: 1px solid $color-border-light;
  padding-top: $spacing-md;

  button {
    display: flex;
    align-items: center;
    gap: $spacing-xs;
    padding: $spacing-sm $spacing-md;
    border: 1px solid $color-border-light;
    border-radius: $border-radius-md;
    background: white;
    color: $color-text-primary;
    cursor: pointer;
    font-size: 0.9rem;
    transition: all 0.2s ease;

    &:hover {
      background: $color-background-paper;
    }

    &.downloadButton {
      background: $color-secondary;
      color: white;
      border-color: $color-secondary;

      &:hover {
        background: darken($color-secondary, 8%);
      }
    }

    &.editButton {
      background: $color-primary;
      color: white;
      border-color: $color-primary;

      &:hover {
        background: darken($color-primary, 8%);
      }
    }

    &.approveButton {
      background: #4caf50;
      color: white;
      border-color: #4caf50;

      &:hover {
        background: darken(#4caf50, 8%);
      }
    }

    &.historyButton {
      background: #ff9800;
      color: white;
      border-color: #ff9800;

      &:hover {
        background: darken(#ff9800, 8%);
      }
    }
  }
}

// 반응형 디자인
@include responsive-breakpoint($breakpoint-tablet) {
  .container {
    padding: $spacing-md;
  }

  .header {
    flex-direction: column;
    gap: $spacing-md;
    align-items: stretch;
  }

  .createButton {
    align-self: flex-start;
  }

  .table {
    font-size: 0.8rem;
    min-width: 1200px;
    
    th, td {
      padding: $spacing-xs $spacing-sm;
    }
  }

  .titleCell {
    min-width: 280px;

    .specTitle {
      font-size: 0.85rem;
    }

    .specDescription {
      font-size: 0.75rem;
    }
  }

  .detailItem {
    grid-template-columns: 1fr;
    gap: $spacing-xs;

    label {
      font-size: 0.8rem;
      color: $color-text-disabled;
    }
  }

  .modalActions {
    flex-direction: column;
    
    button {
      width: 100%;
      justify-content: center;
    }
  }
}

@include responsive-breakpoint($breakpoint-mobile) {
  .statsSection {
    grid-template-columns: 1fr;
  }

  .filterSection {
    gap: $spacing-sm;
  }

  .filter, .searchBox {
    min-width: auto;
  }
}