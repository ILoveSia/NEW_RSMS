// ===================================
// RSMS SCSS Mixins
// CSS Modules + SCSS Architecture
// ===================================

// 📱 Responsive Design Mixins
@mixin mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-md}) {
    @content;
  }
}

@mixin lg {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin xl {
  @media (min-width: #{$breakpoint-xl}) {
    @content;
  }
}

@mixin md {
  @media (min-width: #{$breakpoint-md}) {
    @content;
  }
}

@mixin sm {
  @media (min-width: #{$breakpoint-sm}) {
    @content;
  }
}

// Custom breakpoint mixin
@mixin breakpoint($size) {
  @media (min-width: #{$size}) {
    @content;
  }
}

// Responsive breakpoint mixin (호환성을 위해 추가)
@mixin responsive-breakpoint($size) {
  @media (max-width: #{$size - 1px}) {
    @content;
  }
}

// 🎨 Flexbox Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-around {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

@mixin flex-column {
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-center;
  @include flex-column;
}

// 🎭 Animation & Transition Mixins
@mixin transition($property: all, $duration: $transition-base, $timing: $transition-ease-in-out, $delay: 0s) {
  transition: $property $duration $timing $delay;
}

@mixin hover-lift {
  transform: translateY(-2px);
  box-shadow: $shadow-lg;
}

@mixin loading-shimmer {
  background: linear-gradient(90deg, 
    $color-gray-200 25%, 
    $color-gray-100 50%, 
    $color-gray-200 75%
  );
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
}

@keyframes loading-shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// 📏 Positioning Mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin fixed-fill {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// 🎯 Component Mixins
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  outline: none;
  
  &:focus {
    outline: 2px solid $color-primary;
    outline-offset: 2px;
  }
}

@mixin input-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  outline: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

@mixin truncate-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 📋 Form Mixins
@mixin form-field {
  margin-bottom: $spacing-md;
  
  label {
    display: block;
    font-size: $font-size-sm;
    font-weight: $font-weight-medium;
    color: $form-label-color;
    margin-bottom: $spacing-xs;
  }
  
  input, textarea, select {
    width: 100%;
    padding: $spacing-sm;
    border: 1px solid $form-input-border;
    border-radius: $border-radius-md;
    background-color: $form-input-background;
    font-family: $font-family-base;
    @include transition(border-color);
    
    &:focus {
      border-color: $form-input-focus-border;
      outline: none;
    }
    
    &::placeholder {
      color: $color-text-hint;
    }
  }
  
  .error-message {
    margin-top: $spacing-xs;
    font-size: $font-size-xs;
    color: $form-error-color;
  }
}

@mixin form-validation($state: error) {
  @if $state == error {
    border-color: $color-error;
    
    &:focus {
      border-color: $color-error;
      box-shadow: 0 0 0 2px rgba($color-error, 0.1);
    }
  } @else if $state == success {
    border-color: $color-success;
    
    &:focus {
      border-color: $color-success;
      box-shadow: 0 0 0 2px rgba($color-success, 0.1);
    }
  }
}

// 🃁 Card Mixins
@mixin card {
  background: $card-background;
  border: 1px solid $card-border;
  border-radius: $border-radius-lg;
  box-shadow: $card-shadow;
  padding: $card-padding;
  @include transition(box-shadow);
  
  &:hover {
    box-shadow: $shadow-md;
  }
}

@mixin card-header {
  padding-bottom: $spacing-md;
  margin-bottom: $spacing-md;
  border-bottom: 1px solid $color-border-light;
  
  h1, h2, h3, h4, h5, h6 {
    margin: 0;
    color: $color-text-primary;
  }
}

// 📊 Table Mixins
@mixin table-base {
  width: 100%;
  border-collapse: collapse;
  font-size: $font-size-sm;
  
  th, td {
    text-align: left;
    padding: $spacing-sm;
    border-bottom: 1px solid $color-border-light;
  }
  
  th {
    background-color: $color-gray-50;
    font-weight: $font-weight-semibold;
    color: $color-text-primary;
  }
  
  tbody tr {
    @include transition(background-color);
    
    &:hover {
      background-color: $color-gray-25;
    }
  }
}

// 🎪 Loading Mixins
@mixin loading-overlay {
  @include absolute-fill;
  @include flex-center;
  background-color: rgba($color-background-paper, 0.8);
  z-index: $z-index-modal;
}

@mixin spinner($size: 24px, $color: $color-primary) {
  width: $size;
  height: $size;
  border: 2px solid $color-gray-200;
  border-top: 2px solid $color;
  border-radius: $border-radius-full;
  animation: spinner 1s linear infinite;
}

@keyframes spinner {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// 🎨 Scrollbar Mixins
@mixin custom-scrollbar($width: 8px, $track-color: $color-gray-100, $thumb-color: $color-gray-400) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// 🔍 Focus Mixins
@mixin focus-visible {
  outline: 2px solid $color-primary;
  outline-offset: 2px;
}

@mixin focus-ring($color: $color-primary) {
  box-shadow: 0 0 0 2px rgba($color, 0.1);
  outline: 2px solid transparent;
}

// 📐 Layout Mixins
@mixin container($max-width: $breakpoint-xl) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-md;
  
  @include md {
    padding: 0 $spacing-lg;
  }
}

@mixin section-spacing {
  padding: $spacing-xl 0;
  
  @include md {
    padding: $spacing-3xl 0;
  }
}

// 🚨 Utility Mixins
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 🎭 Theme Mixins (다크모드 대비)
@mixin theme-light {
  // 라이트 테마 스타일
  @content;
}

@mixin theme-dark {
  @media (prefers-color-scheme: dark) {
    @content;
  }
  
  [data-theme="dark"] & {
    @content;
  }
}