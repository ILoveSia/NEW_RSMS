@import '@/styles/variables';
@import '@/styles/mixins';

.actionBar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: $spacing-md;
  background: linear-gradient(145deg, #ffffff 0%, #fafbfc 100%);
  border-radius: $border-radius-xl;
  border: 3px solid #cbd5e1;
  box-shadow:
    0 8px 24px rgba(100, 116, 139, 0.12),
    0 2px 4px rgba(0, 0, 0, 0.03),
    inset 0 1px 0 rgba(255, 255, 255, 0.8);
  overflow: hidden;
  position: relative;
  min-height: 60px;

  &:hover {
    border-color: #627d98;
    box-shadow:
      0 16px 40px rgba(100, 116, 139, 0.16),
      0 4px 8px rgba(0, 0, 0, 0.06),
      inset 0 1px 0 rgba(255, 255, 255, 0.9);
    transform: translateY(-2px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @include responsive-breakpoint($breakpoint-tablet) {
    flex-direction: column;
    gap: $spacing-md;
    align-items: stretch;
    padding: $spacing-md;
  }

  @include responsive-breakpoint($breakpoint-mobile) {
    padding: $spacing-sm;
  }
}

.actionLeft {
  display: flex;
  align-items: center;
  gap: $spacing-lg;
  flex-wrap: wrap;

  @include responsive-breakpoint($breakpoint-tablet) {
    justify-content: center;
    gap: $spacing-md;
  }

  @include responsive-breakpoint($breakpoint-mobile) {
    flex-direction: column;
    gap: $spacing-xs;
    align-items: center;
  }
}

.actionRight {
  display: flex;
  align-items: center;
  gap: $spacing-sm;

  @include responsive-breakpoint($breakpoint-tablet) {
    justify-content: center;
    width: 100%;
    flex-wrap: wrap;
  }

  @include responsive-breakpoint($breakpoint-mobile) {
    flex-direction: column;
    gap: $spacing-xs;
  }
}

// 총 개수 표시
.totalCount {
  display: flex;
  align-items: center;
  gap: $spacing-xs;

  .label {
    font-size: 0.875rem;
    color: $color-text-secondary;
    font-weight: 500;
  }

  .count {
    font-size: 1rem;
    color: $color-text-primary;
    font-weight: 600;
    font-family: 'Monaco', 'Menlo', monospace;
  }
}

// 선택된 개수 표시
.selectedCount {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  padding: 6px 12px;
  background: rgba($color-primary, 0.1);
  border-radius: $border-radius-md;
  border: 1px solid rgba($color-primary, 0.2);
  min-width: 80px;
  min-height: 32px;
  justify-content: center;

  .selectedLabel {
    font-size: 0.75rem;
    color: $color-primary;
    font-weight: 500;
    flex-shrink: 0;
  }

  .selectedValue {
    font-size: 0.875rem;
    color: $color-primary;
    font-weight: 700;
    font-family: 'Monaco', 'Menlo', monospace;
    min-width: 20px;
    text-align: center;
  }
}

// 상태 정보 공통 스타일
.statusItem {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  padding: 6px 12px;
  border-radius: $border-radius-md;
  border: 1px solid;
  min-width: 80px;
  min-height: 32px;
  justify-content: center;

  .statusIcon {
    display: flex;
    align-items: center;
    font-size: 1rem;
    flex-shrink: 0;
  }

  .statusLabel {
    font-size: 0.75rem;
    font-weight: 500;
    flex-shrink: 0;
  }

  .statusValue {
    font-size: 0.875rem;
    font-weight: 600;
    font-family: 'Monaco', 'Menlo', monospace;
    min-width: 20px;
    text-align: center;
  }
}

// 상태별 색상
.statusDefault {
  background: rgba($color-text-secondary, 0.1);
  border-color: rgba($color-text-secondary, 0.2);
  color: $color-text-secondary;
}

.statusPrimary {
  background: rgba($color-primary, 0.1);
  border-color: rgba($color-primary, 0.2);
  color: $color-primary;
}

.statusSecondary {
  background: rgba($color-secondary, 0.1);
  border-color: rgba($color-secondary, 0.2);
  color: $color-secondary;
}

.statusSuccess {
  background: rgba($color-success, 0.1);
  border-color: rgba($color-success, 0.2);
  color: $color-success;
}

.statusWarning {
  background: rgba($color-warning, 0.1);
  border-color: rgba($color-warning, 0.2);
  color: $color-warning;
}

.statusError {
  background: rgba($color-error, 0.1);
  border-color: rgba($color-error, 0.2);
  color: $color-error;
}

// 액션 버튼 스타일
.actionButton {
  background: var(--theme-button-primary) !important;
  backdrop-filter: blur(10px) !important;
  color: var(--theme-button-primary-text) !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  padding: 8px 16px !important;
  height: 40px !important;
  min-width: 100px !important;
  border-radius: $border-radius-lg !important;
  border: 1px solid rgba(255, 255, 255, 0.3) !important;
  box-shadow:
    0 4px 16px rgba(0, 0, 0, 0.1) !important,
    inset 0 1px 0 rgba(255, 255, 255, 0.2) !important;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1) !important;
  position: relative !important;
  overflow: hidden !important;
  white-space: nowrap !important;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  &:hover:not(:disabled) {
    transform: translateY(-1px) !important;
    box-shadow:
      0 6px 20px rgba(0, 0, 0, 0.15) !important,
      inset 0 1px 0 rgba(255, 255, 255, 0.2) !important;

    &::before {
      left: 100%;
    }
  }

  &:active {
    transform: translateY(0) !important;
    box-shadow:
      0 2px 8px rgba(0, 0, 0, 0.1) !important,
      inset 0 1px 0 rgba(255, 255, 255, 0.2) !important;
  }

  &:disabled {
    opacity: 0.6 !important;
    cursor: not-allowed !important;
    transform: none !important;
  }

  @include responsive-breakpoint($breakpoint-mobile) {
    width: 100%;
    justify-content: center;
    min-width: 100px !important;
    white-space: nowrap !important;
  }
}

// 반응형 조정
@include responsive-breakpoint($breakpoint-tablet) {
  .actionLeft {
    .totalCount,
    .selectedCount,
    .statusItem {
      .label,
      .selectedLabel,
      .statusLabel {
        font-size: 0.8rem;
      }

      .count,
      .selectedValue,
      .statusValue {
        font-size: 0.9rem;
      }
    }
  }
}

@include responsive-breakpoint($breakpoint-mobile) {
  .actionLeft {
    .totalCount,
    .selectedCount,
    .statusItem {
      min-width: 120px;
      justify-content: center;
    }
  }
}